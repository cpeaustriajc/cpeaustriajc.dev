---
import Head from '@/components/Head.astro';
import Base from '@/layouts/Base.astro';
import { getCollection,CollectionEntry } from 'astro:content';

interface Props {
    entry: CollectionEntry<'blog'>;
}

export async function getStaticPaths() {
	const postEntries = await getCollection('blog');

	return postEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;

const { Content } = await entry.render();
---

<Base>
	<Head slot="head">
		<title>{entry.data.title}</title>
		<meta name="description" content={entry.data.description} />

		<meta name="color-scheme" content="light dark" />

		<meta property="og:title" content={entry.data.title} />
		<meta property="og:url" content={Astro.url.href} />
		<meta
			property="og:image"
			content={`/assets/${entry.data.image_name}.webp`}
		/>
		<meta property="og:image:alt" content={`${entry.data.image_alt}`} />

		<meta name="twitter:card" content="summary_large_image" />
		<meta property="twitter:domain" content="jaycedotbin.me" />
		<meta property="twitter:url" content={Astro.url.href} />
		<meta name="twitter:title" content={entry.data.title} />
		<meta name="twitter:description" content={entry.data.description} />
		<meta
			name="twitter:image"
			content={`/assets/${entry.data.image_name}.webp`}
		/>
		<meta name="twitter:image:alt" content={`${entry.data.image_alt}`} />
	</Head>

	<main
		slot="content"
		class="font-sans mx-auto prose prose-headings:font-display dark:prose-invert px-4 lg:px-0"
	>
		<header>
			<h1 class="font-display">{entry.data.title}</h1>
			<p>
				<time datetime={entry.data.date.format.toString()}>
					{entry.data.date.content}
				</time>
			</p>
		</header>
		<article>
            <Content />
		</article>
	</main>
</Base>
