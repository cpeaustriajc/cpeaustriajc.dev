---
import BaseLayout from "~/layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import ArrowLeft from "~/components/ArrowLeft.astro";

type Props = {
  entry: CollectionEntry<"posts">;
};

export async function getStaticPaths() {
  const postEntries = await getCollection("posts");

  return postEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const date = entry.data.publishDate.toLocaleDateString("en-PH", {
  year: "numeric",
  month: "long",
  day: "numeric",
  hour: "numeric",
  minute: "numeric",
});

const { Content } = await entry.render();

const meta = {
  title: entry.data.title,
  description: entry.data.description,
  image: entry.data.coverImage,
  keywords: entry.data.keywords,
};
---

<BaseLayout {meta}>
  <main class="px-4 font-sans lg:px-40">
    <header>
      <section class="flex flex-row">
        <div class="absolute flex gap-2">
          <a
            href="/posts"
            class="rounded-md p-1 text-sm font-medium leading-6 text-neutral-400 transition-colors duration-500 hover:text-neutral-50 focus:outline focus:outline-2 focus:outline-violet-400"
            ><ArrowLeft />Back</a
          >
        </div>
        <div class="mx-auto max-w-prose">
          <div>
            <span class="text-sm text-neutral-500">Post</span>
            <span
              role="separator"
              aria-orientation="vertical"
              class="mx-1 text-sm text-neutral-500"
            >
              |
            </span>
            <time
              datetime={entry.data.publishDate.toISOString()}
              class="text-sm text-neutral-500"
            >
              {date}
            </time>
          </div>
          <h1 class="text-4xl font-bold text-neutral-50">
            {entry.data.title}
          </h1>
        </div>
      </section>
      <figure class="py-4">
        <Image
          src={entry.data.coverImage}
          alt={entry.data.coverImageAlt}
          width={entry.data.coverImage.width}
          height={entry.data.coverImage.height}
          loading="eager"
          class="not-prose aspect-[16/9] rounded"
        />
      </figure>
    </header>
    <article
      class="prose mx-auto dark:prose-invert focus:outline focus:outline-2 focus:outline-violet-400 prose-code:font-mono prose-pre:font-mono"
    >
      <Content />
    </article>
  </main>
</BaseLayout>
