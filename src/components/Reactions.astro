<script>
  type Reactions =
    | "like"
    | "love"
    | "dislike"
    | "haha"
    | "sad"
    | "angry"
    | "surprised";

  class ReactionsList extends HTMLElement {
    constructor() {
      super();
    }

    private likeCount = 0;
    private loveCount = 0;
    private dislikeCount = 0;
    private hahaCount = 0;
    private sadCount = 0;
    private angryCount = 0;
    private surprisedCount = 0;

    private usedReactions: Record<Reactions, boolean> = {
      like: false,
      love: false,
      dislike: false,
      haha: false,
      sad: false,
      angry: false,
      surprised: false,
    };

    handleReaction(reaction: Reactions) {
      if (!this.usedReactions[reaction]) {
        switch (reaction) {
          case "like":
            this.likeCount++;
            break;
          case "love":
            this.loveCount++;
            break;
          case "dislike":
            this.dislikeCount++;
            break;
          case "haha":
            this.hahaCount++;
            break;
          case "sad":
            this.sadCount++;
            break;
          case "angry":
            this.angryCount++;
            break;
          case "surprised":
            this.surprisedCount++;
            break;
        }
        const inputs: NodeListOf<Element> = document.querySelectorAll(
          'reactions-list input[type="radio"]',
        );
        inputs.forEach((input: Element) => {
          (input as HTMLInputElement).disabled = true;
        });

        // Optionally, you can add a visual indicator that the reaction was recorded
        const selectedLabel = document.querySelector(
          `label[for="${reaction}"]`,
        );
        if (selectedLabel) {
          selectedLabel.classList.add("selected");
        }
      }
    }
  }
  customElements.define("reactions-list", ReactionsList);
</script>

<reactions-list>
  <label for="love">
    <input type="radio" name="reaction" id="love" value="love" />
    <img src="https://emojicdn.elk.sh/😍" width="24" height="24" alt="Love" />
  </label>
  <label for="like">
    <input type="radio" name="reaction" id="like" value="like" />
    <img src="https://emojicdn.elk.sh/👍" width="24" height="24" alt="Like" />
  </label>
  <label for="dislike">
    <input type="radio" name="reaction" id="dislike" value="dislike" />
    <img
      src="https://emojicdn.elk.sh/👎"
      width="24"
      height="24"
      alt="Dislike"
    />
  </label>
  <label for="haha">
    <input type="radio" name="reaction" id="haha" value="haha" />
    <img src="https://emojicdn.elk.sh/😂" width="24" height="24" alt="Haha" />
  </label>
  <label for="sad">
    <input type="radio" name="reaction" id="sad" value="sad" />
    <img src="https://emojicdn.elk.sh/😢" width="24" height="24" alt="Sad" />
  </label>
  <label for="angry">
    <input type="radio" name="reaction" id="angry" value="angry" />
    <img src="https://emojicdn.elk.sh/😡" width="24" height="24" alt="Angry" />
  </label>
  <label for="surprised">
    <input type="radio" name="reaction" id="surprised" value="surprised" />
    <img
      src="https://emojicdn.elk.sh/😲"
      width="24"
      height="24"
      alt="Surprised"
    />
  </label>
</reactions-list>

<style>
  reactions-list {
    position: absolute;
    top: 25px;
    left: -90px;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    border-radius: 9999px;
    padding: 1rem;
    background-color: hsl(var(--gray-1-hsl) / 5%);
  }

  label {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    align-items: center;
  }

  input[type="radio"] {
    display: none;
  }

  label img {
    transition: transform 0.2s ease-in-out;
  }

  label:hover img {
    transform: scale(1.1);
  }

  input[type="radio"]:checked + img {
    transform: scale(1.5);
    filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
    animation: pulse 0.5s ease-in-out;
  }

  @keyframes pulse {
    0% {
      transform: scale(1.35);
    }
    50% {
      transform: scale(1.75);
    }
    100% {
      transform: scale(1.5);
    }
  }
</style>
